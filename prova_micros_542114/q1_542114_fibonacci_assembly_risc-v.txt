# Inicialização dos endereços para armazenar a sequência de Fibonacci
addi a1, zero, 0x100     # a1 = endereço_base = 0x100
addi a2, a1, 32          # a2 = MAXFIB = endereço_base + tamanho_da_sequência

# Inicialização dos primeiros valores da sequência (fib_0 e fib_1)
addi t0, zero, 1         # t0 = 1 (valor inicial)
sw t0, 0(a1)             # Armazena o valor de t0 (1) na posição de memória 0(a1)
sw t0, 4(a1)             # Armazena o valor de t0 (1) na posição de memória 4(a1)

# Início do loop para calcular os valores restantes da sequência
addi t0, a1, 0           # Inicializa o ponteiro para o início da sequência (a1)
fib                     

    # Carrega os valores dos dois últimos números da sequência
    lw t3, 0(t0)         # Carrega fib_{i-1} da memória para t3
    lw t4, 4(t0)         # Carrega fib_{i-2} da memória para t4

    # Calcula o próximo número da sequência (fib_{i} = fib_{i-1} + fib_{i-2})
    add t5, t3, t4       # Soma fib_{i-1} e fib_{i-2} e armazena em t5

    # Armazena o valor calculado na próxima posição da sequência
    sw t5, 8(t0)         # Armazena fib_{i} na memória

    # Atualiza o ponteiro para a próxima posição na memória
    addi t0, t0, 4       # Incrementa o ponteiro em 4 bytes para o próximo número

    # Verifica se alcançamos o final da sequência
    bne t0, a2, fib      # Se não atingiu o final (a2), volta para o rótulo fib e continua o loop